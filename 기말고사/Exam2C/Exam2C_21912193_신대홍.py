# 파일명 : Exam2C_21912193_신대홍.py
# 프로그램 목적 및 기능: 선형시스템을 numpy를 이용해서 해를 산출하는 프로그램
# 프로그램 작성자 : 신대홍(2022년 6월 11일)
# 최종 Update : Version 1.0.0, 2022년 6월 11일(신대홍)
# =======================================================================
#     수정자          날짜        버전        수정내용
# =======================================================================
#     신대홍     2022/06/11     v1.0.0       최초작성

import numpy as np # NumPy 라이브러리 호출

def main():
    A = np.array([[1, 5, 3, 3, 7], [3, 4, 5, 6, 7],\
        [1, 3, 5, 7, 9], [3, 1, 4, 1, 5], [5, 5, 3, 3, 1]], dtype=np.int32)
      # A = 선형 시스템 구조, 선형 시스템 구조는 아래에 있음
    B = np.array([105, 135, 145, 74, 75], dtype=np.int32)
      # B = 선형시스템 결과, 아래참고
    
    print("2022-1 컴사파 Exam2C 학번 : 21912193, 이름: 신대홍") # 확인용 이름

    print("\nA = \n", A) # 선형시스템 구조 출력
    print("B = \n", B) # 선형시스템 출력 구조 출력

    det_A = np.linalg.det(A) # 유니버셜 함수 det()로 A의 행렬식을 구한다.
    print("\ndet_A = \n", det_A) # A행렬식 출력
    inv_A = np.linalg.inv(A) # 유니버셜 함수 inv()로 A의 역행렬을 구함
    print("\ninv_A = \n", inv_A) # A의 역행렬 출력
    
    X = np.linalg.solve(A, B) # 유니버셜 함수 solve()로 AX = B의 X(해)산출
    print("\nX = \n", X) # 선형 시스템 해 출력

    B1 = np.matmul(A, X) # 검산을 위해 A와 X를 곱해 B가 출력되는지 확인
    print("\nB1 = A * X =\n", B1)

    X1 = np.matmul(inv_A, B) # 검산을 위해 A역행렬과 B를 곱해 X가 출력되는지 확인
    print("\nX1 = inv_A * B =\n", X1) 
    # 검산결과 출력
#

if __name__ == "__main__": #메인문 출력
    main()

#선형 시스템 구조 
#a + 5b + 3c + 3d + 7e = 105
#3a + 4b + 5c + 6d + 7e = 135
#a + 3b + 5c + 7d + 9e = 145
#3a + b + 4c + d + 5e = 74
#5a + 5b + 3c + 3d + e = 75